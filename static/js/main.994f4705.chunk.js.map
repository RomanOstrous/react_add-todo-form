{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/user.ts","services/pattern.js","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","cn","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","pattern","initialTodos","App","useState","setTitle","hasTitleError","setHasTitleError","setUserId","HasUserIdError","setHasUserIdError","setTodo","handleSubmit","event","preventDefault","newTodo","Math","max","prevTodo","addTodo","action","method","onSubmit","type","placeholder","value","onChange","newTitle","target","test","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.994f4705.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user: { name, email } }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    completed,\n    title,\n    user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId);\n}\n","export const pattern = /^[a-zA-Zа-яА-ЯіІїЇ0-9\\s]*$/;\n","import { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { getUserById } from './services/user';\nimport { pattern } from './services/pattern';\n\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [HasUserIdError, setHasUserIdError] = useState(false);\n\n  const [todo, setTodo] = useState(initialTodos);\n\n  const addTodo = () => {\n    const prevTodoId = Math.max(...todo.map(prevTodo => prevTodo.id));\n    const newTodoId = prevTodoId + 1;\n    const newTodo: Todo = {\n      id: newTodoId,\n      title,\n      userId,\n      user: getUserById(userId),\n      completed: false,\n    };\n\n    setTodo((prevTodo) => ([...prevTodo, newTodo]));\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = event.target.value;\n\n    if (!pattern.test(newTitle)) {\n      setHasTitleError(true);\n    } else {\n      setHasTitleError(false);\n      setTitle(newTitle);\n    }\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    addTodo();\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n\n          {hasTitleError && (\n            <span className=\"error\">\n              {`Please enter a name. \n              Use letters UA and EN, numbers and spaces.`}\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserIdChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {HasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onSubmit={handleSubmit}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todo} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}